/*
Написать программу, которая вычисляет число pi с заданной пользователем точностью. Для вычисления значения числа pi воспользоваться 
формулой: pi = 4 * (1 - 1/3 + 1/5 - 1/7 + 1/9 - ...) Определить какое количество дробей необходимо было добавить к сумме, 
чтобы обеспечить заданную точность. Запомнить кол-во, например в переменной N.Рассмотрим произвольный квадрат с центром 
в начале координат и вписанный в него круг. Будем рассматривать только первую координатную четверть. В ней будет находиться
четверть круга и четверть квадрата. Обозначим радиус круга R, тогда четверть квадрата тоже будет квадратом со стороной R. 
Будем случайным образом выбирать точки в этом квадрате и считать количество точек, попавших в четверть круга. Из теории вероятности
известно, что отношение попаданий в четверть круга к попаданиям "в молоко" равно отношению площадей – pi/4.
Реализовать указанный алгоритм вычислений. Количество выбираемых точек N (вычислено ранее).
Сравнить вычисленные двумя способами значения числа pi. Можно сделать вывод какой способ сходится быстрее?
*/

#include <iostream>

int main() {

	double E, pi1, pi = 0;
	int n = 0;
	std::cout << "Input E: ";
	std::cin >> E;

	for (int i = 1; ; i += 2) {
	    ++n;
		pi1 = pi;
		if (n % 2 == 0){
    		pi = pi - 1.0 / i;
		}else{
    		pi = pi + 1.0 / i;
		}
		if ((int)(pi / E) == (int)(pi1 / E)) break;
	}
  
	std::cout << "pi= "<<pi*4 << std::endl<< "n= "<< n <<std::endl;
	return 0;
}
